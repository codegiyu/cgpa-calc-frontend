name: Deploy to remote server on push or merge to main branch

# In this section, two environment variables are created which will be use in the section of the configuration
env:
    DEPLOY_PACKAGE_NAME_FILE: ${{ github.sha }}.zip
    DEPLOY_PACKAGE_NAME: ${{ github.sha }}

# Controls when the workflow will run
"on":
    # Triggers the workflow on push or pull request events but only for the production branch
    push:
        branches: master

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains one job called deploy
    deploy:
        name: Deploy app

        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        steps:
            - name: Git clone https://github.com/codegiyu/cgpa-calc-frontend.git
              uses: actions/checkout@v2

            - name: This create an env file incase we need one.
              run: |
                  touch .env
                  echo so_so_secret=${{ secrets.so_so_secret }} >> .env

            - name: Install And Build Our React App
              run: npm install && npm run build

            - name: Create zip deployment package
              run: zip -r ${{ env.DEPLOY_PACKAGE_NAME_FILE }} ./dist/ -x .git

            - name: copy file via ssh password
              uses: appleboy/scp-action@master
              with:
                  host: ${{ secrets.SERVER_IP }}
                  username: ${{ secrets.SERVER_USERNAME }}
                  key: ${{ secrets.SERVER_KEY }}
                  password: ""
                  passphrase: ""
                  port: 22
                  source: ${{ env.DEPLOY_PACKAGE_NAME_FILE }}
                  target: /home/${{ secrets.SERVER_USERNAME }}

            - name: Connect to AWS SERVER, extract file and delete the file
              uses: appleboy/ssh-action@v0.1.7
              with:
                  host: ${{ secrets.SERVER_IP }}
                  username: ${{ secrets.SERVER_USERNAME }}
                  key: ${{ secrets.SERVER_KEY }}
                  password: ""
                  passphrase: ""
                  port: 22
                  script: |
                      sudo apt-get install zip unzip
                      sudo unzip -q -o /home/${{ secrets.SERVER_USERNAME }}/${{ env.DEPLOY_PACKAGE_NAME_FILE }} -d ${{ secrets.SERVER_ROOT_DIR }}
                      sudo rm /home/${{ secrets.SERVER_USERNAME }}/${{ env.DEPLOY_PACKAGE_NAME_FILE }}
                      sudo systemctl restart nginx

            - name: Deployment completed Successfully
              run: echo "App Deployment completed successfully"
